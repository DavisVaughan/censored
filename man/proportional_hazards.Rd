% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proportional_hazards.R
\name{proportional_hazards}
\alias{proportional_hazards}
\title{Parsnip engines for Proportional Hazards Models

\code{proportional_hazards()} is a way to generate a \emph{specification} of a model before
fitting and allows the model to be created using different packages in R.
The main arguments for the model are:
\itemize{
\item \code{penalty}: The total amount of regularization
in the model. Note that this must be zero for some engines.
\item \code{mixture}: The mixture amounts of different types of
regularization (see below). Note that this will be ignored for some engines.
}
These arguments are converted to their specific names at the
time that the model is fit. Other options and arguments can be
set using \code{set_engine()}. If left to their defaults
here (\code{NULL}), the values are taken from the underlying model
functions. If parameters need to be modified, \code{update()} can be used
in lieu of recreating the object from scratch.}
\description{
Parsnip engines for Proportional Hazards Models

\code{proportional_hazards()} is a way to generate a \emph{specification} of a model before
fitting and allows the model to be created using different packages in R.
The main arguments for the model are:
\itemize{
\item \code{penalty}: The total amount of regularization
in the model. Note that this must be zero for some engines.
\item \code{mixture}: The mixture amounts of different types of
regularization (see below). Note that this will be ignored for some engines.
}
These arguments are converted to their specific names at the
time that the model is fit. Other options and arguments can be
set using \code{set_engine()}. If left to their defaults
here (\code{NULL}), the values are taken from the underlying model
functions. If parameters need to be modified, \code{update()} can be used
in lieu of recreating the object from scratch.
}
\details{
Proportional hazards models include the Cox model.
For \code{proportional_hazards()}, the mode will always be "censored regression".

The model can be created using the \code{fit()} function using the following \emph{engines}:
\itemize{
\item \pkg{R}: \code{"survival"} (the default)
}
}
\section{Engine Details}{


Engines may have pre-set default arguments when executing the model fit call.
For this type of model, the template of the fit calls are:

\pkg{survival} engine

\preformatted{
survival::coxph(formula = missing_arg())
}

Note that, for linear predictor prediction types, the results are formatted
for all models such that the prediction \emph{increases} with time. For the
proportional hazards model, the sign is reversed.
}

\examples{
parsnip::show_engines("proportional_hazards")

library(survival)

cox_mod <-
  proportional_hazards() \%>\%
  set_engine("survival") \%>\%
  fit(Surv(time, status) ~ x, data = aml)
}
